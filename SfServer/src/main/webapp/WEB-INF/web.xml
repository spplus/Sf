<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
    <display-name>SF_SERVER</display-name>
    <!-- 加载spring的配置文件 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring/applicationContext.xml</param-value>
    </context-param>
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>SFSERVER.root</param-value>
    </context-param>
    <!-- 加载log4j配置 -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.xml</param-value>
    </context-param>
    <!-- 启动Web容器时，自动装配ApplicationContext的配置信息 -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <!-- 在启动Web容器时，自动装配Spring的配置信息 -->
    <!--Spring的ApplicationContext 载入 -->
    
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <!-- Spring 刷新Introspector防止内存泄露 
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>
    <listener>
        <listener-class>com.huipu.common.listener.WebAppContextListener</listener-class>
    </listener>
    -->
    <!-- RocketMQ 
    <servlet>
        <servlet-name>initMQ</servlet-name>
        <servlet-class>com.huipu.tc.rocketmq.InitRocketMq</servlet-class>
        <load-on-startup>3</load-on-startup>
    </servlet>
	
    <servlet-mapping>
        <servlet-name>initMQ</servlet-name>
        <url-pattern>/initMQ</url-pattern>
    </servlet-mapping>
	-->
    <!-- 业务服务器 
    <servlet>
        <servlet-name>initSocket</servlet-name>
        <servlet-class>com.huipu.tc.core.socket.server.SocketServer</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>initSocket</servlet-name>
        <url-pattern>/initSocket</url-pattern>
    </servlet-mapping>
    -->
</web-app>